{"ast":null,"code":"var _jsxFileName = \"/Users/namanpratyush/Documents/UI/REACT/MARCH-20-2020/Udemy/BradCourse/REDUX/brad-redux/src/components/logs/Logs.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\nexport const Logs = ({\n  propLog: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  useEffect(() => {\n    getLogs(); //eslint-disable-next-line\n  }, []);\n\n  if (propLog.loading || propLog.logs === null) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"System Logs\")), !propLog.loading && propLog.logs.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"No Logs to show\") : propLog.logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 35\n    }\n  })));\n};\nLogs.propTypes = {\n  propLog: PropTypes.object.isRequired\n};\n\nconst mapStateToProp = state => ({\n  propLog: state.log\n});\n\nexport default connect(mapStateToProp, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["/Users/namanpratyush/Documents/UI/REACT/MARCH-20-2020/Udemy/BradCourse/REDUX/brad-redux/src/components/logs/Logs.js"],"names":["React","useState","useEffect","connect","LogItem","Preloader","PropTypes","getLogs","Logs","propLog","logs","loading","length","map","log","id","propTypes","object","isRequired","mapStateToProp","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAX;AAA8BJ,EAAAA;AAA9B,CAAD,KAA6C;AAC/DL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,GADO,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIE,OAAO,CAACE,OAAR,IAAmBF,OAAO,CAACC,IAAR,KAAiB,IAAxC,EAA8C;AAC5C,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIG,CAACD,OAAO,CAACE,OAAT,IAAoBF,OAAO,CAACC,IAAR,CAAaE,MAAb,KAAwB,CAA5C,gBACC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,GAGCH,OAAO,CAACC,IAAR,CAAaG,GAAb,CAAkBC,GAAD,iBAAS,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAPJ,CADF;AAYD,CAtBM;AAwBPP,IAAI,CAACQ,SAAL,GAAiB;AACfP,EAAAA,OAAO,EAAEH,SAAS,CAACW,MAAV,CAAiBC;AADX,CAAjB;;AAIA,MAAMC,cAAc,GAAIC,KAAD,KAAY;AACjCX,EAAAA,OAAO,EAAEW,KAAK,CAACN;AADkB,CAAZ,CAAvB;;AAIA,eAAeX,OAAO,CAACgB,cAAD,EAAiB;AAAEZ,EAAAA;AAAF,CAAjB,CAAP,CAAqCC,IAArC,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LogItem from './LogItem';\nimport Preloader from '../layout/Preloader';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nexport const Logs = ({ propLog: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    //eslint-disable-next-line\n  }, []);\n\n  if (propLog.loading || propLog.logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n      {!propLog.loading && propLog.logs.length === 0 ? (\n        <p className=\"center\">No Logs to show</p>\n      ) : (\n        propLog.logs.map((log) => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  propLog: PropTypes.object.isRequired,\n};\n\nconst mapStateToProp = (state) => ({\n  propLog: state.log,\n});\n\nexport default connect(mapStateToProp, { getLogs })(Logs);\n"]},"metadata":{},"sourceType":"module"}