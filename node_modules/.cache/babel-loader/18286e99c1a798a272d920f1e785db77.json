{"ast":null,"code":"import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR, GET_LOGS } from './types'; //get techs from server\n\nexport const getTechs = () => async dispatch => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs');\n    const data = await res.json();\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //add tech\n\nexport const addTech = tech => async dispatch => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //delete tech\n\nexport const deleteTech = id => async dispatch => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    await fetch(`/techs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; //set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n}; //","map":{"version":3,"sources":["/Users/namanpratyush/Documents/UI/REACT/MARCH-20-2020/Udemy/BradCourse/REDUX/brad-redux/src/actions/techActions.js"],"names":["GET_TECHS","ADD_TECH","DELETE_TECH","SET_LOADING","TECHS_ERROR","GET_LOGS","getTechs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addTech","tech","method","body","JSON","stringify","headers","deleteTech","id"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,QANF,QAOO,SAPP,C,CASA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD;AACA,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb,SADC;AAEPc,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,WAAR;AAAqBU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAA3C,KAAD,CAAR;AACD;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACnD;AACA,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAD,EAAW;AAChCU,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF0B;AAGhCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAAX,CAAvB;AAOA,UAAMb,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEZ,QADC;AAEPa,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAfD,CAeE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,WAAR;AAAqBU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAA3C,KAAD,CAAR;AACD;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMQ,UAAU,GAAIC,EAAD,IAAQ,MAAOnB,QAAP,IAAoB;AACpD;AACA,MAAI;AACFC,IAAAA,UAAU;AACV,UAAME,KAAK,CAAE,UAASgB,EAAG,EAAd,EAAiB;AAC1BN,MAAAA,MAAM,EAAE;AADkB,KAAjB,CAAX;AAIAb,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,WADC;AAEPY,MAAAA,OAAO,EAAEY;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOX,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,WAAR;AAAqBU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAA3C,KAAD,CAAR;AACD;AACF,CAfM,C,CAiBP;;AACA,OAAO,MAAMT,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM,C,CAMP","sourcesContent":["import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n  GET_LOGS,\n} from './types';\n\n//get techs from server\nexport const getTechs = () => async (dispatch) => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n//add tech\nexport const addTech = (tech) => async (dispatch) => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n//delete tech\nexport const deleteTech = (id) => async (dispatch) => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    await fetch(`/techs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id,\n    });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n//set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n\n//\n"]},"metadata":{},"sourceType":"module"}