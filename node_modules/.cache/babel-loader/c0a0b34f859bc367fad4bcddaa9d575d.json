{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOGS } from './types'; // export const getLogs = () => {\n//   return async (dispatch, getState) => {\n//     setLoading();\n//     const res = await fetch('/logs');\n//     const data = await res.json();\n//     dispatch({\n//       type: GET_LOGS,\n//       payload: data,\n//     });\n//   };\n// };\n//get logs from server\n\nexport const getLogs = () => async dispatch => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //add new log\n\nexport const addLog = log => async dispatch => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; //set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/namanpratyush/Documents/UI/REACT/MARCH-20-2020/Udemy/BradCourse/REDUX/brad-redux/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOGS","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,QAA5C,QAA4D,SAA5D,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C;AACA,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,QADC;AAEPY,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,UAAR;AAAoBU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAA1C,KAAD,CAAR;AACD;AACF,CAdM,C,CAgBP;;AACA,OAAO,MAAMM,MAAM,GAAIC,GAAD,IAAS,MAAOX,QAAP,IAAoB;AACjD;AACA,MAAI;AACFC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAU;AAC/BS,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAFyB;AAG/BK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHsB,KAAV,CAAvB;AAOA,UAAMZ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEX,QADC;AAEPY,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAfD,CAeE,OAAOI,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAET,UAAR;AAAoBU,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAA1C,KAAD,CAAR;AACD;AACF,CApBM,C,CAsBP;;AACA,OAAO,MAAMH,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLK,IAAAA,IAAI,EAAEV;AADD,GAAP;AAGD,CAJM","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOGS } from './types';\n\n// export const getLogs = () => {\n//   return async (dispatch, getState) => {\n//     setLoading();\n//     const res = await fetch('/logs');\n//     const data = await res.json();\n\n//     dispatch({\n//       type: GET_LOGS,\n//       payload: data,\n//     });\n//   };\n// };\n\n//get logs from server\nexport const getLogs = () => async (dispatch) => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.data });\n  }\n};\n\n//add new log\nexport const addLog = (log) => async (dispatch) => {\n  //   return async (dispatch, getState) => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data,\n    });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.data });\n  }\n};\n\n//set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}