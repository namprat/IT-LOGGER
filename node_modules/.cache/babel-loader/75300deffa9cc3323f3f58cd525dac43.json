{"ast":null,"code":"import { GET_TECHS, ADD_TECH, DELETE_TECH, SET_LOADING, TECHS_ERROR, GET_LOGS } from '../actions/types';\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_TECH:\n      return { ...state,\n        techs: [...state.techs, action.payload]\n      };\n\n    case GET_TECHS:\n      return { ...state,\n        techs: action.payload,\n        loading: false\n      };\n\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/namanpratyush/Documents/UI/REACT/MARCH-20-2020/Udemy/BradCourse/REDUX/brad-redux/src/reducers/techReducer.js"],"names":["GET_TECHS","ADD_TECH","DELETE_TECH","SET_LOADING","TECHS_ERROR","GET_LOGS","initialState","techs","loading","error","state","action","type","payload","console"],"mappings":"AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,QANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFF,OAAP;;AAIF,SAAKb,SAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFT;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKJ,WAAL;AACEU,MAAAA,OAAO,CAACL,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAIF;AACE,aAAOA,KAAP;AAzBJ;AA2BD,CA5BD","sourcesContent":["import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR,\n  GET_LOGS,\n} from '../actions/types';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n      };\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false,\n      };\n\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}